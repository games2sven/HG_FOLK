/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * java mavlink generator tool. It should not be modified by hand.
 */

// MESSAGE FORMATION_ACK PACKING
package com.MAVLink.common;
import com.MAVLink.MAVLinkPacket;
import com.MAVLink.Messages.MAVLinkMessage;
import com.MAVLink.Messages.MAVLinkPayload;

/**
* 
*/
public class msg_formation_ack extends MAVLinkMessage {

    public static final int MAVLINK_MSG_ID_FORMATION_ACK = 209;
    public static final int MAVLINK_MSG_LENGTH = 9;
    private static final long serialVersionUID = MAVLINK_MSG_ID_FORMATION_ACK;


      
    /**
    * Command token
    */
    public long token;
      
    /**
    * Drone ID
    */
    public int id;
      
    /**
    * Command 1-Takeoff 2-Land 3-Prepare 4-Arm 5-Disarm 6-TimeSync 7-CalMag
    */
    public short cmd;
      
    /**
    * Result
    */
    public short result;
      
    /**
    * Drone is formation or aux 0-formation 1-aux
    */
    public short type;
    

    /**
    * Generates the payload for a mavlink message for a message of this type
    * @return
    */
    public MAVLinkPacket pack(){
        MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH);
        packet.sysid = 255;
        packet.compid = 190;
        packet.msgid = MAVLINK_MSG_ID_FORMATION_ACK;
              
        packet.payload.putUnsignedInt(token);
              
        packet.payload.putUnsignedShort(id);
              
        packet.payload.putUnsignedByte(cmd);
              
        packet.payload.putUnsignedByte(result);
              
        packet.payload.putUnsignedByte(type);
        
        return packet;
    }

    /**
    * Decode a formation_ack message into this class fields
    *
    * @param payload The message to decode
    */
    public void unpack(MAVLinkPayload payload) {
        payload.resetIndex();
              
        this.token = payload.getUnsignedInt();
              
        this.id = payload.getUnsignedShort();
              
        this.cmd = payload.getUnsignedByte();
              
        this.result = payload.getUnsignedByte();
              
        this.type = payload.getUnsignedByte();
        
    }

    /**
    * Constructor for a new message, just initializes the msgid
    */
    public msg_formation_ack(){
        msgid = MAVLINK_MSG_ID_FORMATION_ACK;
    }

    /**
    * Constructor for a new message, initializes the message with the payload
    * from a mavlink packet
    *
    */
    public msg_formation_ack(MAVLinkPacket mavLinkPacket){
        this.sysid = mavLinkPacket.sysid;
        this.compid = mavLinkPacket.compid;
        this.msgid = MAVLINK_MSG_ID_FORMATION_ACK;
        unpack(mavLinkPacket.payload);        
    }

              
    /**
    * Returns a string with the MSG name and data
    */
    public String toString(){
        return "MAVLINK_MSG_ID_FORMATION_ACK - sysid:"+sysid+" compid:"+compid+" token:"+token+" id:"+id+" cmd:"+cmd+" result:"+result+" type:"+type+"";
    }
}
        