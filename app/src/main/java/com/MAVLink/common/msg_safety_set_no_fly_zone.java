/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * java mavlink generator tool. It should not be modified by hand.
 */

// MESSAGE SAFETY_SET_NO_FLY_ZONE PACKING
package com.MAVLink.common;

import com.MAVLink.MAVLinkPacket;
import com.MAVLink.Messages.MAVLinkMessage;
import com.MAVLink.Messages.MAVLinkPayload;

/**
* safety set no fly zone.
*/
public class msg_safety_set_no_fly_zone extends MAVLinkMessage {

    public static final int MAVLINK_MSG_ID_SAFETY_SET_NO_FLY_ZONE = 56;
    public static final int MAVLINK_MSG_LENGTH = 176;
    private static final long serialVersionUID = MAVLINK_MSG_ID_SAFETY_SET_NO_FLY_ZONE;


      
    /**
    * effective UTC time
    */
    public long begin_at;
      
    /**
    * expiration UTC time
    */
    public long end_at;
      
    /**
    * update UTC time
    */
    public long updated_at;
      
    /**
    * the id of the no-fly zone
    */
    public int area_id;
      
    /**
    * the center latitude of the no-fly zone
    */
    public int lat;
      
    /**
    * the center longtitude of the no-fly zone
    */
    public int lon;
      
    /**
    * the randius of the no-fly zone
    */
    public float randius;
      
    /**
    * the latitude array of the polygon no-fly zone
    */
    public int polygon_lat[] = new int[16];
      
    /**
    * the longtitude array of the polygon no-fly zone
    */
    public int polygon_lon[] = new int[16];
      
    /**
    * system id
    */
    public short target_system;
      
    /**
    * component id
    */
    public short target_component;
      
    /**
    * cordinate frame defined by MAV_FRAME enum
    */
    public short frame;
      
    /**
    * country code
    */
    public byte country[] = new byte[2];
      
    /**
    * the level of the no-fly zone(-1:unknown;0:warning;2:no fly;5:ok to fly)
    */
    public byte level;
      
    /**
    * the shape of the no-fly zone.(-1:unknown;0:circle;1:rectangle;12:polygon)
    */
    public byte shape;
      
    /**
    * type of this no-fly zone.(-1:unknown;0:airport;1:specific area;2:military zone;3.goverment;4:ok to fly zone;5:ferry terminals;6:train station;7.gymnasium;8.prison.)
    */
    public byte type;
    

    /**
    * Generates the payload for a mavlink message for a message of this type
    * @return
    */
    public MAVLinkPacket pack(){
        MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH);
        packet.sysid = 255;
        packet.compid = 190;
        packet.msgid = MAVLINK_MSG_ID_SAFETY_SET_NO_FLY_ZONE;
              
        packet.payload.putUnsignedLong(begin_at);
              
        packet.payload.putUnsignedLong(end_at);
              
        packet.payload.putUnsignedLong(updated_at);
              
        packet.payload.putInt(area_id);
              
        packet.payload.putInt(lat);
              
        packet.payload.putInt(lon);
              
        packet.payload.putFloat(randius);
              
        
        for (int i = 0; i < polygon_lat.length; i++) {
            packet.payload.putInt(polygon_lat[i]);
        }
                    
              
        
        for (int i = 0; i < polygon_lon.length; i++) {
            packet.payload.putInt(polygon_lon[i]);
        }
                    
              
        packet.payload.putUnsignedByte(target_system);
              
        packet.payload.putUnsignedByte(target_component);
              
        packet.payload.putUnsignedByte(frame);
              
        
        for (int i = 0; i < country.length; i++) {
            packet.payload.putByte(country[i]);
        }
                    
              
        packet.payload.putByte(level);
              
        packet.payload.putByte(shape);
              
        packet.payload.putByte(type);
        
        return packet;
    }

    /**
    * Decode a safety_set_no_fly_zone message into this class fields
    *
    * @param payload The message to decode
    */
    public void unpack(MAVLinkPayload payload) {
        payload.resetIndex();
              
        this.begin_at = payload.getUnsignedLong();
              
        this.end_at = payload.getUnsignedLong();
              
        this.updated_at = payload.getUnsignedLong();
              
        this.area_id = payload.getInt();
              
        this.lat = payload.getInt();
              
        this.lon = payload.getInt();
              
        this.randius = payload.getFloat();
              
         
        for (int i = 0; i < this.polygon_lat.length; i++) {
            this.polygon_lat[i] = payload.getInt();
        }
                
              
         
        for (int i = 0; i < this.polygon_lon.length; i++) {
            this.polygon_lon[i] = payload.getInt();
        }
                
              
        this.target_system = payload.getUnsignedByte();
              
        this.target_component = payload.getUnsignedByte();
              
        this.frame = payload.getUnsignedByte();
              
         
        for (int i = 0; i < this.country.length; i++) {
            this.country[i] = payload.getByte();
        }
                
              
        this.level = payload.getByte();
              
        this.shape = payload.getByte();
              
        this.type = payload.getByte();
        
    }

    /**
    * Constructor for a new message, just initializes the msgid
    */
    public msg_safety_set_no_fly_zone(){
        msgid = MAVLINK_MSG_ID_SAFETY_SET_NO_FLY_ZONE;
    }

    /**
    * Constructor for a new message, initializes the message with the payload
    * from a mavlink packet
    *
    */
    public msg_safety_set_no_fly_zone(MAVLinkPacket mavLinkPacket){
        this.sysid = mavLinkPacket.sysid;
        this.compid = mavLinkPacket.compid;
        this.msgid = MAVLINK_MSG_ID_SAFETY_SET_NO_FLY_ZONE;
        unpack(mavLinkPacket.payload);        
    }

                             
    /**
    * Sets the buffer of this message with a string, adds the necessary padding
    */
    public void setCountry(String str) {
        int len = Math.min(str.length(), 2);
        for (int i=0; i<len; i++) {
            country[i] = (byte) str.charAt(i);
        }

        for (int i=len; i<2; i++) {            // padding for the rest of the buffer
            country[i] = 0;
        }
    }

    /**
    * Gets the message, formated as a string
    */
    public String getCountry() {
        String result = "";
        for (int i = 0; i < 2; i++) {
            if (country[i] != 0)
                result = result + (char) country[i];
            else
                break;
        }
        return result;

    }
                               
    /**
    * Returns a string with the MSG name and data
    */
    public String toString(){
        return "MAVLINK_MSG_ID_SAFETY_SET_NO_FLY_ZONE -"+" begin_at:"+begin_at+" end_at:"+end_at+" updated_at:"+updated_at+" area_id:"+area_id+" lat:"+lat+" lon:"+lon+" randius:"+randius+" polygon_lat:"+polygon_lat+" polygon_lon:"+polygon_lon+" target_system:"+target_system+" target_component:"+target_component+" frame:"+frame+" country:"+country+" level:"+level+" shape:"+shape+" type:"+type+"";
    }
}
        